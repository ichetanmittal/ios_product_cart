name: iOS Starter Workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and Test Default Scheme
    runs-on: macos-latest

    steps:
      # Checkout the code
      - name: Checkout
        uses: actions/checkout@v4

      # Verify Xcode version
      - name: Verify Xcode Version
        run: xcodebuild -version

      # Set Xcode to 16.2 (ensure compatibility with your project)
      - name: Select Xcode 16.2
        run: sudo xcode-select -s /Applications/Xcode_16.2.app

      # Debug available devices and simulators
      - name: List Available Simulators
        run: xcrun simctl list

      # Set Default Scheme
      - name: Set Default Scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.read)['project']['schemes'][0]")
          echo $default > default
          echo "Using default scheme: $default"

      # Build the project
      - name: Build
        run: |
          device=$(xcrun simctl list devices | grep -oE 'iPhone.*? \(' | head -1 | sed -e "s/ (//")
          scheme=$(cat default)
          if [ -f *.xcworkspace ]; then
            filetype_parameter="workspace"
            file_to_build=$(ls *.xcworkspace)
          else
            filetype_parameter="project"
            file_to_build=$(ls *.xcodeproj)
          fi
          echo "Building $file_to_build with scheme $scheme on device $device"
          xcodebuild build-for-testing \
            -scheme "$scheme" \
            -"$filetype_parameter" "$file_to_build" \
            -destination "platform=iOS Simulator,name=$device" | xcpretty

      # Test the project
      - name: Test
        run: |
          device=$(xcrun simctl list devices | grep -oE 'iPhone.*? \(' | head -1 | sed -e "s/ (//")
          scheme=$(cat default)
          if [ -f *.xcworkspace ]; then
            filetype_parameter="workspace"
            file_to_build=$(ls *.xcworkspace)
          else
            filetype_parameter="project"
            file_to_build=$(ls *.xcodeproj)
          fi
          echo "Testing $file_to_build with scheme $scheme on device $device"
          xcodebuild test-without-building \
            -scheme "$scheme" \
            -"$filetype_parameter" "$file_to_build" \
            -destination "platform=iOS Simulator,name=$device" | xcpretty
