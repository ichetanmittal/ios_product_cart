name: iOS Starter Workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and Test Default Scheme
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Verify Xcode Version
        run: xcodebuild -version

      - name: Debug Project Compatibility
        run: xcodebuild -list

      - name: Build
        run: |
          device=$(xcrun simctl list devices | grep -oE 'iPhone.*? \(' | head -1 | sed -e "s/ (//")
          scheme="YourSchemeName" # Replace with your scheme name
          if [ -f *.xcworkspace ]; then
            filetype_parameter="workspace"
            file_to_build=$(ls *.xcworkspace)
          else
            filetype_parameter="project"
            file_to_build=$(ls *.xcodeproj)
          fi
          echo "Building $file_to_build with scheme $scheme on device $device"
          xcodebuild build-for-testing \
            -scheme "$scheme" \
            -"$filetype_parameter" "$file_to_build" \
            -destination "platform=iOS Simulator,name=$device" | xcpretty

      - name: Test
        run: |
          device=$(xcrun simctl list devices | grep -oE 'iPhone.*? \(' | head -1 | sed -e "s/ (//")
          scheme="YourSchemeName" # Replace with your scheme name
          if [ -f *.xcworkspace ]; then
            filetype_parameter="workspace"
            file_to_build=$(ls *.xcworkspace)
          else
            filetype_parameter="project"
            file_to_build=$(ls *.xcodeproj)
          fi
          echo "Testing $file_to_build with scheme $scheme on device $device"
          xcodebuild test-without-building \
            -scheme "$scheme" \
            -"$filetype_parameter" "$file_to_build" \
            -destination "platform=iOS Simulator,name=$device" | xcpretty
